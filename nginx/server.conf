# Nginx configuration
upstream backend {	
	server auth-api-server:3000;
	server auth-api-server:3333;
}

# Server configuration for http 80 requests and redirect to https
server {
    listen 80;
	  listen [::]:80;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name api.bitwisebeat.tech;

    # location /.well-known/acme-challenge {
    #     alias /etc/letsencrypt/webrootauth/.well-known/acme-challenge;
    #     default_type "text/plain";
    #     allow all;
    # }

    location ~ /.well-known/acme-challenge {
      allow all;
      root /var/www/html;
    }

    # location / {
    #     return 301 https://$host$request_uri;
    # }

    # backend api server
    location / {
      proxy_pass http://backend;

      # Do not change this
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# server {
#   listen 443 ssl;
#   listen [::]:443 ssl;
#   server_name api.bitwisebeat.tech;
# 
#   # SSL stuff for Certbot
# 	ssl_certificate /etc/letsencrypt/live/api.bitwisebeat.tech/fullchain.pem;
# 	ssl_certificate_key /etc/letsencrypt/live/api.bitwisebeat.tech/privkey.pem;
# 
# 	# backend api server
#   location / {
#     proxy_pass http://backend;
# 
#     # Do not change this
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#   	proxy_set_header Connection "upgrade";
#     proxy_set_header X-Forwarded-Proto $scheme;
#   }
# }