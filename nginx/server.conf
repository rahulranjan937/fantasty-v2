# Nginx configuration
upstream backend {	
	server auth-api-server:3000;
	server auth-api-server:3333;
}

# Server configuration for http 80 requests and redirect to https
server {

	listen 80;
  listen [::]:80;
  server_name auth.bytebeat.live bytebeat.live;
  return 301 https://$host$request_uri;

	# backend api server
    location / {
      proxy_pass http://backend;

      # Do not change this
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  		proxy_set_header Connection "upgrade";
    }
}

# Server configuration for https 443 requests and proxy to backend
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name auth.bytebeat.live bytebeat.live;

  ssl_certificate /etc/nginx/ssl/bytebeat.live/auth.bytebeat.live.pem;
  ssl_certificate_key /etc/nginx/ssl/bytebeat.live/auth.bytebeat.live.key;

  # SSL Configuration
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers off;
  ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
  ssl_session_timeout 1d;
  ssl_session_cache shared:MozSSL:10m;
  ssl_session_tickets off;
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 1.1.1.1;

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";

  location / {
    proxy_pass http://backend;

    # Do not change this
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Connection "upgrade";
  }
}