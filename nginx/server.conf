# Nginx configuration
upstream backend {	
	server auth-api-server:3000;
	server auth-api-server:3333;
}

# Server configuration for http 80 requests and redirect to https
server {
    listen 80;
	  listen [::]:80;
    server_name api.bitwisebeat.tech;

    location ~ /.well-known/acme-challenge {
      allow all;
      root /var/www/html;
    }

    location / {
      rewrite ^ https://$host$request_uri? permanent;
    }

    # backend api server
#     location / {
#       proxy_pass http://backend;
# 
#       # Do not change this
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header Connection "upgrade";
#       proxy_set_header X-Forwarded-Proto $scheme;
#     }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name api.bitwisebeat.tech;

  # SSL stuff for Certbot
	ssl_certificate /etc/letsencrypt/live/api.bitwisebeat.tech/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/api.bitwisebeat.tech/privkey.pem;

	# backend api server
  location / {
    try_files $uri @nodejs;
  }

  location @nodejs {
    proxy_pass http://backend;

    # Do not change this
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  	proxy_set_header Connection "upgrade";
    proxy_set_header X-Forwarded-Proto $scheme;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    #enable strict transport security only if you understand the implications

  }

  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;
}